version: 1

before:
  hooks:
    - go mod tidy

env:
  - CGO_ENABLED=1

builds:
  - id: darwin-amd64
    binary: alphabat
    main: .
    goarch:
      - amd64
    goos:
      - darwin
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    flags:
      - -trimpath

  - id: darwin-arm64
    binary: alphabat
    main: .
    goarch:
      - arm64
    goos:
      - darwin
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    flags:
      - -trimpath
  - id: linux-amd64
    binary: alphabat
    main: .
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
    goarch:
      - amd64
    goos:
      - linux
    flags:
      - -trimpath
    ldflags:
      - -extldflags "-lc -lrt -lpthread --static"
  - id: linux-arm64
    binary: alphabat
    main: .
    goarch:
      - arm64
    goos:
      - linux
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    flags:
      - -trimpath
    ldflags:
      - -extldflags "-lc -lrt -lpthread --static"
  - id: windows-amd64
    binary: alphabat
    main: .
    goarch:
      - amd64
    goos:
      - windows
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    flags:
      - -trimpath
      - -buildmode=exe

universal_binaries:
  - id: darwin-universal
    ids:
      - darwin-amd64
      - darwin-arm64
    replace: true
    name_template: "alphabat"

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      alphabat-{{ .Version }}-
      {{- .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
